plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}


android {
    namespace 'spa.lyh.cn.lib_utils'
    compileSdk 34


    defaultConfig {
        minSdk 19
        targetSdk 34

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "com.google.android.material:material:${versions.design}"
}

var signingKeyId = ""//签名的密钥后8位
var signingPassword = ""//签名设置的密码
var secretKeyRingFile = ""//生成的secring.gpg文件目录
var ossrhUsername = ""//sonatype用户名
var ossrhPassword = "" //sonatype密码

File localProperties = project.rootProject.file("local.properties")

if (localProperties.exists()) {
    println 'Found secret props file, loading props'
    Properties properties = new Properties()

    localProperties.withInputStream { stream ->
        properties.load(new InputStreamReader(stream, 'UTF-8'))
    }
    signingKeyId = properties.getProperty('signingKeyId')
    signingPassword = properties.getProperty('signingPassword')
    secretKeyRingFile = properties.getProperty('secretKeyRingFile')
    ossrhUsername = properties.getProperty('ossrhUsername')
    ossrhPassword = properties.getProperty('ossrhPassword')

} else {
    println 'No props file, loading env vars'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'io.github.liyuhaolol'
                artifactId = 'CommonUtils'
                version = versions.versionName
                pom {
                    name.value("CommonUtils")
                    description.value("Powerful Utils")
                    url.value("https://github.com/liyuhaolol/CommonUtils")

                    developers {
                        developer {
                            id.value("liyuhao")
                            name.value("liyuhao")
                            email.value("liyuhaoid@sina.com")
                        }
                    }

                    scm {
                        connection.value("scm:git@github.com/liyuhaolol/CommonUtils.git")
                        developerConnection.value("scm:git@github.com/liyuhaolol/CommonUtils.git")
                        url.value("https://github.com/liyuhaolol/CommonUtils")
                    }
                }
            }
        }

        repositories {
            maven {
                name 'CommonUtils'
                url = 'https://central.sonatype.com/api/v1/publisher/deployments/download/'
                credentials(HttpHeaderCredentials){
                    name = ossrhUsername
                    value = ossrhPassword
                }
                authentication {header(HttpHeaderAuthentication)}
/*                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }*/
/*                authentication {
                    basic(AuthenticationContainer)
                }*/
            }
        }
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        allprojects {
            ext['signing.keyId'] = signingKeyId
            ext['signing.secretKeyRingFile'] = secretKeyRingFile
            ext['signing.password'] = signingPassword
        }
    }
}

signing {
    sign publishing.publications
}




